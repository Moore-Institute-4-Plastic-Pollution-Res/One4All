[{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/articles/app.html","id":"document-overview","dir":"Articles","previous_headings":"","what":"Document Overview","title":"Validator App Tutorial","text":"document outlines workflow utilize validator app One4All portal. reading document, users better understanding processes involved creating app navigate . purpose tool validate, share download data well following cloud services: Amazon S3, CKAN, /MongoDB. documentation One4All R package, please see One4All Package Tutorial.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/articles/app.html","id":"background-rules","dir":"Articles","previous_headings":"","what":"Background: Rules","title":"Validator App Tutorial","text":"existing set rules created ‘Excel’ applied app package prior user usage. rules used validate data uploaded. current rules sheet consists six columns, including name, description, dataset, valid example, severity, rule (see details). However, users can structure rules sheet meet purposes. Download sample rules '_Help' tab validator app view current example rules. Name: name row. '(ex. Amount)' Description: description rule requirements. '(ex. two identical particles (every aspect), upload indicate number identical particles whole number)' Dataset: Optional field file separated multiple sheets files. '(ex. partices; methodology; samples)' Valid_example: valid example rule. '(ex. 2)' Severity: severity rule, labeled ‘warning’ ‘error’; invalid data marked either ‘warning’ ‘error’ depending severity rule. Warnings allow data still shared, whereas error need corrected files reuploaded sharing. '(ex. warning)' Rule: rule validates data (written r code). '(ex. Amount >= 2 | .na(Amount))'","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/articles/app.html","id":"running-the-app","dir":"Articles","previous_headings":"","what":"Running the App","title":"Validator App Tutorial","text":"access validator app, go link openanalysis.org/microplastic_data_portal/ go GitHub link directly device R. setting github device, go validator folder, select global.R, ui.R, server.R, run app. using R package, read library run following command, run_app().","code":"library(One4All) run_app()"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/articles/app.html","id":"how-to-structure-your-data","dir":"Articles","previous_headings":"","what":"How to structure your data","title":"Validator App Tutorial","text":"Download valid data example '_Help' tab within app adapt purposes. important columns data rules sheet column data corresponds rule within rules sheet.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/articles/app.html","id":"validating-data","dir":"Articles","previous_headings":"","what":"Validating Data","title":"Validator App Tutorial","text":"app loaded, upload data selecting ‘Upload Data’ icon. local folder display can select ‘CSV’ ‘Excel’ files along corresponding zip folder. data display successes, warnings, errors. view details, click table display two boxes, 'Issues Raised' 'Issues Selected'. 'Issues Raised' box highlight warnings errors. Click 'Issues Raised' column invalid entries appear right 'Issues Selected' box. view statuses, including successes, switch tool toggle labeled 'Errors ?' .","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/articles/app.html","id":"sharing-data","dir":"Articles","previous_headings":"","what":"Sharing Data","title":"Validator App Tutorial","text":"Reupload files correcting errors; errors must corrected validate data, warnings allowed. update previous submission, upload previous certificate local device. new submission, follow rest prompt screen.  input key optional provided required. required, provided ahead time maintainer. data successfully uploaded, new screen, 'Successful Remote Data Sharing', displayed. Download certificate top right corner view credentials dataset.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/articles/app.html","id":"downloading-data","dir":"Articles","previous_headings":"","what":"Downloading Data","title":"Validator App Tutorial","text":"Download previously uploaded data cloud services providing dataset ID downloaded certificate. dataset ID, represented hash numbers, ensure provide correct dataset ID data attempting download.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/articles/datavisualization.html","id":"document-overview","dir":"Articles","previous_headings":"","what":"Document Overview","title":"Data Visualization Tutorial","text":"document outlines workflow utilize Data Visualization Tool One4All portal. reading document, users better understanding processes involved creating app navigate . purpose tool analyze interpret microplastics data using plots, tables, maps. 'Map Raw Data', 'Map Countries', 'Visuals' tabs use data California Open Data Portal. 'CA Microplastic Synthetic Data' uses synthetic data, aim replace data Validator tool.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/articles/datavisualization.html","id":"running-the-app","dir":"Articles","previous_headings":"","what":"Running the App","title":"Data Visualization Tutorial","text":"access Data Visualization Tool, go link openanalysis.org/microplastic_analysis/ go Github link directly device R. setting github device, go 'data_visualization' folder select app.R file run app.  first two tabs allow users look concentration microplastics cities countries. Users first select one locations, generating following: Map: map displays location(s) selected. marker represents dataset location includes ‘Latitude’, ‘Longitude’, ‘Source’, ‘Concentration’.  Plot: plot raincloud plot displays plastics source (bottled tap) concentration (particles/L), based location(s) selected.  Table: table displays data directly California Open Data Portal.  third tab allows users compare following microplastic characteristics data implemented tool: morphology, color, material. Users select sankey plot wish view plot generate relationship two characteristics.  last tab uses data entirely simulated illustrative purposes demonstrate functionality tool displaying yearly average concentrations, treatment levels, polymer width distributions.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/articles/imageexplorer.html","id":"document-overview","dir":"Articles","previous_headings":"","what":"Document Overview","title":"Microplastic Image Explorer Tutorial","text":"document outlines workflow utilize Microplastic Image Explorer One4All portal. reading document, users better understanding processes involved creating app navigate . purpose tool allow users improve use visual microscopy microplastic identification applying filters query microplastic images.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/articles/imageexplorer.html","id":"running-the-app","dir":"Articles","previous_headings":"","what":"Running the App","title":"Microplastic Image Explorer Tutorial","text":"access Image Explorer, go link openanalysis.org/microplastic_image_explorer/ go Github link directly device R. setting github device, go 'microplastic_image_explorer' folder select app.R file run app.  app loaded, users can select ‘Citation’, ‘Color’, ‘Morphology’, ‘Polymer’ query various microplastic images. queried results populate , along breadcrumb filter top page shows filters applied.  filter options update filter applied ensure existing images can queried.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/articles/package.html","id":"document-overview","dir":"Articles","previous_headings":"","what":"Document Overview","title":"One4All Package Tutorial","text":"document outlines One4All package highlights main functions validate data without using validator app. user’s choice whether work validator app use One4All package. reading document, users better understanding One4All package development main functions validate, share, download data. access One4All package, go GitHub link directly device R. One4All package backbone validator app. looking tutorial use app see Validator App Tutorial.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/articles/package.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"One4All Package Tutorial","text":"installing R package, read following library: run app, run command run_app():","code":"library(One4All) run_app()"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/articles/package.html","id":"validate-data-reading-and-formatting-data","dir":"Articles","previous_headings":"","what":"Validate Data: Reading and Formatting Data","title":"One4All Package Tutorial","text":"function validates data using One4All package. Replace parameters defined actual values file paths. 'data_names' replaced tables rules sheet. 'files_data': list file paths dataset validated (either ‘CSV’ ‘Excel’ files). 'data_names': (Optional) character vector names datasets. provided, names extracted file paths. '(ex. methodology, samples, particles)' 'file_rules': file path rules file, either ‘CSV’ ‘Excel’ format.","code":"validate_data(   files_data,   data_names = NULL,   file_rules = NULL )"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/articles/package.html","id":"check-for-malicious-files","dir":"Articles","previous_headings":"Validate Data: Reading and Formatting Data","what":"Check for malicious files","title":"One4All Package Tutorial","text":"function checks malicious files. provided files appear malicious extension, function stop raise error. argument, 'files', character vector file paths, can paths zip individual files. malicious file found, code return ‘TRUE’, otherwise say ‘FALSE’.","code":"check_for_malicious_files(files)"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/articles/package.html","id":"read-rules","dir":"Articles","previous_headings":"Validate Data: Reading and Formatting Data","what":"Read rules","title":"One4All Package Tutorial","text":"function reads rules file data frame. Acceptable file formats ‘CSV’ ‘Excel’ files.","code":"read_rules(file_rules)"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/articles/package.html","id":"read-data","dir":"Articles","previous_headings":"Validate Data: Reading and Formatting Data","what":"Read data","title":"One4All Package Tutorial","text":"function reads formats data ‘CSV’ ‘Excel’ files. argument, 'files_data', list files read, 'data_names', optional vector names data frames.","code":"read_data(files_data, data_names = NULL)"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/articles/package.html","id":"where-is-this-data-shared","dir":"Articles","previous_headings":"","what":"Where is this data shared?","title":"One4All Package Tutorial","text":"One4All package, 'remote share' function shares validated data MongoDB, CKAN, /AmazonS3. purpose three options user preference share data: MongoDB NoSQL database stores data BSON format, allowing flexible data structures. CKAN open-source data portal platform, allowing managing sharing datasets. Amazon S3 cloud-based object storage service, providing scalable durable storage wide variety data types. 'remote_share' function shown .","code":"shared_data <- remote_share(validation = result_valid,                             data_formatted = result_valid$data_formatted,                             files = test_file,                             verified = \"your_verified_key\",                             valid_key = \"your_valid_key\",                             valid_rules = digest::digest(test_rules),                             ckan_url = \"https://example.com\",                             ckan_key = \"your_ckan_key\",                             ckan_package = \"your_ckan_package\",                             url_to_send = \"https://your-url-to-send.com\",                             rules = test_rules,                             results = valid_example$results,                             s3_key_id = \"your_s3_key_id\",                             s3_secret_key = \"your_s3_secret_key\",                             s3_region = \"your_s3_region\",                             s3_bucket = \"your_s3_bucket\",                             mongo_key = \"your_mongo_key\",                             mongo_collection = \"your_mongo_collection\",                             old_cert = NULL )"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/articles/package.html","id":"how-is-the-data-downloaded","dir":"Articles","previous_headings":"","what":"How is the data downloaded?","title":"One4All Package Tutorial","text":"'remote_download' function allows users download data MongoDB, CKAN, /AmazonS3. data retrieved based 'hashed_data' identifier (dataset ID downloaded certificate) assumes data stored using naming conventions provided 'remote_share' function. 'remote_download' function shown .","code":"downloaded_data <- remote_download(hashed_data = \"example_hash\",                                      ckan_url = \"https://example.com\",                                      ckan_key = \"your_ckan_key\",                                      ckan_package = \"your_ckan_package\",                                      s3_key_id = \"your_s3_key_id\",                                      s3_secret_key = \"your_s3_secret_key\",                                      s3_region = \"your_s3_region\",                                      s3_bucket = \"your_s3_bucket\",                                      mongo_key = \"mongo_key\",                                      mongo_collection = \"mongo_collection\")"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Hannah Sherrod. Maintainer, author. Nick Leong. Author. Hannah Hapich. Author. Fabian Gomez. Author. Shelly Moore. Author. Win Cowger. Author. Scott Coffin. Contributor. Tony Hale. Contributor. Diana Lin. Contributor. Gemma Shusterman. Contributor. Rebecca Sutton. Contributor. Adam Wong. Contributor. Haig Minasian. Contributor. Holden Ford. Contributor. Anja Oca. Contributor. Richard Nelson. Contributor. Leah Thornton Hampton. Contributor. Libby Heeren. Contributor. Gabriel Daiess. Contributor.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sherrod H, Leong N, Hapich H, Gomez F, Moore S, Cowger W (2024). One4All: Validate, Share, Download Data. R package version 0.4, https://moore-institute-4-plastic-pollution-res.github.io/One4All/, https://github.com/Moore-Institute-4-Plastic-Pollution-Res/One4All.","code":"@Manual{,   title = {One4All: Validate, Share, and Download Data},   author = {Hannah Sherrod and Nick Leong and Hannah Hapich and Fabian Gomez and Shelly Moore and Win Cowger},   year = {2024},   note = {R package version 0.4, https://moore-institute-4-plastic-pollution-res.github.io/One4All/},   url = {https://github.com/Moore-Institute-4-Plastic-Pollution-Res/One4All}, }"},{"path":[]},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Validate, Share, and Download Data","text":"One4All portal designed streamline data validation formatting tasks. primary function read set rules ‘CSV’ ‘Excel’ file validate dataset. package functions shiny application also helps creating valid ‘Excel’ files conditional formatting based specified rules, making easier identify manage inconsistencies data. Overall, One4All portal aims enhance data validation management processes efficient accurate workflow. Users option work R shiny application R package. functionality validator app based One4All package.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Validate, Share, and Download Data","text":"One4All available CRAN GitHub.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/index.html","id":"get-the-released-version-from-cran","dir":"","previous_headings":"Installation","what":"Get the released version from CRAN:","title":"Validate, Share, and Download Data","text":"","code":"install.packages(\"One4All\")"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/index.html","id":"or-the-development-version-from-github","dir":"","previous_headings":"Installation","what":"Or the development version from GitHub:","title":"Validate, Share, and Download Data","text":"","code":"# install.packages(\"remotes\") remotes::install_github(\"Moore-Institute-4-Plastic-Pollution-Res/One4All\")"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/index.html","id":"access-the-validator-tool-below","dir":"","previous_headings":"Installation","what":"Access the validator tool below:","title":"Validate, Share, and Download Data","text":"Click web app: openanalysis.org/microplastic_data_portal/. code app code/validator","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Validate, Share, and Download Data","text":"","code":"library(One4All)"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/index.html","id":"additional-instructions","dir":"","previous_headings":"","what":"Additional Instructions","title":"Validate, Share, and Download Data","text":"Access pkgdown vignettes : https://moore-institute-4-plastic-pollution-res.github.io/One4All/","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Validate, Share, and Download Data","text":"Contributions One4All welcome! ideas Contribute. Please adhere project’s Code Conduct. Open issue pull request .","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Validate, Share, and Download Data","text":"One4All released MIT License. Please see license file information.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/certificate_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a data frame with certificate information — certificate_df","title":"Generate a data frame with certificate information — certificate_df","text":"function creates data frame certificate information including current time, data rule hashes, package version, web hash.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/certificate_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a data frame with certificate information — certificate_df","text":"","code":"certificate_df(x, time = Sys.time())"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/certificate_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a data frame with certificate information — certificate_df","text":"x list containing `data_formatted` `rules` elements. time time certificate generated, can passed value uses current system time.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/certificate_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a data frame with certificate information — certificate_df","text":"data frame certificate information.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/certificate_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a data frame with certificate information — certificate_df","text":"","code":"# \\donttest{ certificate_df(x = list(data_formatted = data.frame(a = 1:3, b = 4:6),                         rules = validate::validator(a > 0, b > 0)),                time = Sys.time()) #>                  time                             data #> 1 2024-05-08 20:48:37 1588db974386807c63543ef59d3039e5 #>                              rules package_version #> 1 547da4ee80f1f21de091280870d053b7           1.1.5 #>                           web_hash #> 1 2791e0ed92170723e203d506e1a5cb51                # }"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/checkLuhn.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a number passes the Luhn algorithm — checkLuhn","title":"Check if a number passes the Luhn algorithm — checkLuhn","text":"function checks given number passes Luhn algorithm. commonly used validate credit card numbers.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/checkLuhn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a number passes the Luhn algorithm — checkLuhn","text":"","code":"checkLuhn(number)"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/checkLuhn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a number passes the Luhn algorithm — checkLuhn","text":"number character string number check Luhn algorithm.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/checkLuhn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a number passes the Luhn algorithm — checkLuhn","text":"logical value indicating whether number passes Luhn algorithm (TRUE) (FALSE).","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/checkLuhn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if a number passes the Luhn algorithm — checkLuhn","text":"","code":"checkLuhn(\"4532015112830366\") # TRUE #> [1] TRUE checkLuhn(\"4532015112830367\") # FALSE #> [1] FALSE"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/check_exists_in_zip.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a file exists in a zip file — check_exists_in_zip","title":"Check if a file exists in a zip file — check_exists_in_zip","text":"function checks file given name exists specified zip file.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/check_exists_in_zip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a file exists in a zip file — check_exists_in_zip","text":"","code":"check_exists_in_zip(zip_path, file_name)"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/check_exists_in_zip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a file exists in a zip file — check_exists_in_zip","text":"zip_path character string representing path zip file. file_name character string representing name file check.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/check_exists_in_zip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a file exists in a zip file — check_exists_in_zip","text":"logical value indicating whether file exists zip file (TRUE) (FALSE).","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/check_exists_in_zip.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if a file exists in a zip file — check_exists_in_zip","text":"","code":"if (FALSE) { check_exists_in_zip(zip_path = \"/path/to/your.zip\", file_name = \"file/in/zip.csv\") }"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/check_for_malicious_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for Malicious Files — check_for_malicious_files","title":"Check for Malicious Files — check_for_malicious_files","text":"function checks presence files extensions known associated malicious activities. function can used screen zip files individual files potentially dangerous file types.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/check_for_malicious_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for Malicious Files — check_for_malicious_files","text":"","code":"check_for_malicious_files(files)"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/check_for_malicious_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for Malicious Files — check_for_malicious_files","text":"files character vector file paths. can paths zip files individual files.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/check_for_malicious_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for Malicious Files — check_for_malicious_files","text":"logical value indicating files input malicious file extension. Returns `TRUE` malicious file found, otherwise `FALSE`.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/check_for_malicious_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for Malicious Files — check_for_malicious_files","text":"","code":"if (FALSE) {   check_for_malicious_files(\"path'(s)'/to/your/files\")   check_for_malicious_files(utils::unzip(\"path/to/your/file.zip\", list = TRUE)$Name) }"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/check_images.html","id":null,"dir":"Reference","previous_headings":"","what":"Check and format image URLs — check_images","title":"Check and format image URLs — check_images","text":"function checks input string contains image URL (PNG JPG) formats HTML img tag specified height.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/check_images.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check and format image URLs — check_images","text":"","code":"check_images(x)"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/check_images.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check and format image URLs — check_images","text":"x character string check image URLs.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/check_images.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check and format image URLs — check_images","text":"character string HTML img tag image URL found, otherwise input string.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/check_images.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check and format image URLs — check_images","text":"","code":"check_images(\"https://example.com/image.png\") #> [1] \"<img src =\\\"https://example.com/image.png\\\" height = \\\"50\\\"><\/img>\" check_images(\"https://example.com/image.jpg\") #> [1] \"<img src =\\\"https://example.com/image.jpg\\\" height = \\\"50\\\"><\/img>\" check_images(\"https://example.com/text\") #> [1] \"https://example.com/text\""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/check_other_hyperlinks.html","id":null,"dir":"Reference","previous_headings":"","what":"Check and format non-image hyperlinks — check_other_hyperlinks","title":"Check and format non-image hyperlinks — check_other_hyperlinks","text":"function checks input string contains non-image hyperlink formats HTML anchor tag.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/check_other_hyperlinks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check and format non-image hyperlinks — check_other_hyperlinks","text":"","code":"check_other_hyperlinks(x)"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/check_other_hyperlinks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check and format non-image hyperlinks — check_other_hyperlinks","text":"x character string check non-image hyperlinks.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/check_other_hyperlinks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check and format non-image hyperlinks — check_other_hyperlinks","text":"character string HTML anchor tag non-image hyperlink found, otherwise input string.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/check_other_hyperlinks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check and format non-image hyperlinks — check_other_hyperlinks","text":"","code":"check_other_hyperlinks(\"https://example.com/page\") #> [1] \"<a href =\\\"https://example.com/page\\\">https://example.com/page<\/a>\" check_other_hyperlinks(\"https://example.com/image.png\") #> [1] \"https://example.com/image.png\" check_other_hyperlinks(\"https://example.com/image.jpg\") #> [1] \"https://example.com/image.jpg\""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/create_valid_excel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a formatted Excel file based on validation rules — create_valid_excel","title":"Create a formatted Excel file based on validation rules — create_valid_excel","text":"function creates Excel file conditional formatting data validation based given validation rules CSV Excel file. function currently compatible Windows Linux operating systems. using macOS system, excel file able download, bugs formatting LOOKUP sheet.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/create_valid_excel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a formatted Excel file based on validation rules — create_valid_excel","text":"","code":"create_valid_excel(   file_rules,   negStyle = createStyle(fontColour = \"#9C0006\", bgFill = \"#FFC7CE\"),   posStyle = createStyle(fontColour = \"#006100\", bgFill = \"#C6EFCE\"),   row_num = 1000 )"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/create_valid_excel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a formatted Excel file based on validation rules — create_valid_excel","text":"file_rules CSV Excel file containing validation rules. negStyle Style apply negative conditions (default red text pink background). posStyle Style apply positive conditions (default green text light green background). row_num Number rows create output file (default 1000).","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/create_valid_excel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a formatted Excel file based on validation rules — create_valid_excel","text":"workbook object containing formatted Excel file.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/create_valid_excel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a formatted Excel file based on validation rules — create_valid_excel","text":"","code":"# \\donttest{ data(\"test_rules\") #> Warning: data set ‘test_rules’ not found create_valid_excel(file_rules = test_rules) #> Error in eval(expr, envir, enclos): object 'test_rules' not found # }"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/invalid_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Invalid Example Data — invalid_example","title":"Invalid Example Data — invalid_example","text":"list containing three data frames example invalid_example.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/invalid_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Invalid Example Data — invalid_example","text":"list 3 data frames: data_frame_1 data frame 18 variables: MethodologyID, SamplingDevice, AirFiltration, AirFiltrationType, ClothingPolicy, NonplasticPolicy, SealedEnvironment, SealedEnvironmentType, SieveMeshSizes, FilterType, FilterDiameter, FilterPoreSize, VisIDMethod, VisualSoftware, PickingStrategy, VisMagnification, MatIDMethod, MatIDSoftware data_frame_2 data frame 8 variables: SampleID, OwnerOrganization, AnalysisOrganization, ReportingOrganization, Latitude, Longitude, CollectionDate, SampleVolume data_frame_3 data frame 17 variables: ParticleID, MethodologyID, SampleID, PhotoID, SpectraID, FinalAnalysisDate, Comments, Polymer, Morphology, Color, Length, Width, Height, Mass, SurfaceArea, Volume, Tactile","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/invalid_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Invalid Example Data — invalid_example","text":"","code":"data(\"invalid_example\") #> Warning: data set ‘invalid_example’ not found"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/is.POSIXct.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an object is of class POSIXct — is.POSIXct","title":"Check if an object is of class POSIXct — is.POSIXct","text":"function checks given object class POSIXct. returns TRUE object inherits POSIXct class, otherwise FALSE.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/is.POSIXct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an object is of class POSIXct — is.POSIXct","text":"","code":"is.POSIXct(x)"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/is.POSIXct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an object is of class POSIXct — is.POSIXct","text":"x object tested POSIXct class inheritance.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/is.POSIXct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an object is of class POSIXct — is.POSIXct","text":"logical value indicating input object class POSIXct.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/is.POSIXct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if an object is of class POSIXct — is.POSIXct","text":"","code":"x <- as.POSIXct(\"2021-01-01\") is.POSIXct(x) # TRUE #> [1] TRUE  y <- Sys.Date() is.POSIXct(y) # FALSE #> [1] FALSE"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/name_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Name datasets — name_data","title":"Name datasets — name_data","text":"function extracts names datasets provided input files. specific data names provided, used, otherwise function tries extract names files .","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/name_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Name datasets — name_data","text":"","code":"name_data(files_data, data_names = NULL)"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/name_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Name datasets — name_data","text":"files_data vector file paths list data frames. data_names vector names assigned datasets.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/name_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Name datasets — name_data","text":"vector dataset names.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/name_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Name datasets — name_data","text":"","code":"name_data(files_data = c(\"path/to/data1.csv\", \"path/to/data2.csv\")) #> [1] \"data1\" \"data2\" name_data(files_data = c(\"path/to/data.xlsx\"), data_names = c(\"sheet1\", \"sheet2\")) #> [1] \"sheet1\" \"sheet2\""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/query_document_by_object_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Query MongoDB Document by ObjectID — query_document_by_object_id","title":"Query MongoDB Document by ObjectID — query_document_by_object_id","text":"function queries mongodb database using API retrieve document ObjectID. Use MongoDB Atlas Data API create API key.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/query_document_by_object_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query MongoDB Document by ObjectID — query_document_by_object_id","text":"","code":"query_document_by_object_id(apiKey, collection, database, dataSource, objectId)"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/query_document_by_object_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query MongoDB Document by ObjectID — query_document_by_object_id","text":"apiKey API key accessing MongoDB API. collection name collection MongoDB database. database name MongoDB database. dataSource data source MongoDB. objectId object ID document query.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/query_document_by_object_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query MongoDB Document by ObjectID — query_document_by_object_id","text":"queried document.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/query_document_by_object_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query MongoDB Document by ObjectID — query_document_by_object_id","text":"","code":"if (FALSE) { apiKey <- 'your_mongodb_api_key' collection <- 'your_mongodb_collection' database <- 'your_database' dataSource <- 'your_dataSource' objectId <- 'example_object_id' query_document_by_object_id(apiKey, collection, database, dataSource, objectId) }"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/read_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and format data from csv or xlsx files — read_data","title":"Read and format data from csv or xlsx files — read_data","text":"Read format data csv xlsx files","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/read_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and format data from csv or xlsx files — read_data","text":"","code":"read_data(files_data, data_names = NULL)"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/read_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and format data from csv or xlsx files — read_data","text":"files_data List files read data_names Optional vector names data frames","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/read_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and format data from csv or xlsx files — read_data","text":"list data frames","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/read_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read and format data from csv or xlsx files — read_data","text":"","code":"read_data(files_data = valid_example, data_names = c(\"methodology\", \"particles\", \"samples\")) #> Error in eval(expr, envir, enclos): object 'valid_example' not found"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/read_rules.html","id":null,"dir":"Reference","previous_headings":"","what":"Read rules from a file — read_rules","title":"Read rules from a file — read_rules","text":"function reads rules file data frame. file can csv xlsx format. data column names \"name\", \"description\", \"dataset\", \"valid example\", \"severity\", \"rule\". function also checks rules contain sensitive words rules fields character type.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/read_rules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read rules from a file — read_rules","text":"","code":"read_rules(file_rules)"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/read_rules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read rules from a file — read_rules","text":"file_rules file containing rules. Can CSV XLSX file, data frame.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/read_rules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read rules from a file — read_rules","text":"data frame containing rules.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/read_rules.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read rules from a file — read_rules","text":"","code":"if (FALSE) { read_rules(\"path/to/rules\") }"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/reformat_rules.html","id":null,"dir":"Reference","previous_headings":"","what":"Reformats the rules — reformat_rules","title":"Reformats the rules — reformat_rules","text":"function responsible handling rule reformating, dataset handling foreign key checks.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/reformat_rules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reformats the rules — reformat_rules","text":"","code":"reformat_rules(rules, data_formatted, zip_data = NULL)"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/reformat_rules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reformats the rules — reformat_rules","text":"rules data.frame containing rules reformatted. data_formatted named list data.frames data. zip_data file path zip folder additional data check.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/reformat_rules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reformats the rules — reformat_rules","text":"data.frame reformatted rules.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/reformat_rules.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reformats the rules — reformat_rules","text":"","code":"data(\"test_rules\") #> Warning: data set ‘test_rules’ not found data(\"valid_example\") #> Warning: data set ‘valid_example’ not found reformat_rules(rules = test_rules, data_formatted = valid_example) #> Error in eval(expr, envir, enclos): object 'test_rules' not found"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/remote_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Structured Data from Remote Sources — remote_download","title":"Download Structured Data from Remote Sources — remote_download","text":"function downloads data remote sources like CKAN, AWS S3, MongoDB. retrieves data based hashed_data identifier assumes data stored using naming conventions provided `remote_share` function.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/remote_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Structured Data from Remote Sources — remote_download","text":"","code":"remote_download(   hashed_data = NULL,   ckan_url,   ckan_key,   ckan_package,   s3_key_id,   s3_secret_key,   s3_region,   s3_bucket,   mongo_key,   mongo_collection )"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/remote_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Structured Data from Remote Sources — remote_download","text":"hashed_data character string representing hashed identifier data downloaded. ckan_url character string representing CKAN base URL. ckan_key character string representing CKAN API key. ckan_package character string representing CKAN package identifier. s3_key_id character string representing AWS S3 access key ID. s3_secret_key character string representing AWS S3 secret access key. s3_region character string representing AWS S3 region. s3_bucket character string representing AWS S3 bucket name. mongo_key character string representing mongo key. mongo_collection character string representing mongo collection.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/remote_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Structured Data from Remote Sources — remote_download","text":"named list containing downloaded datasets.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/remote_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Structured Data from Remote Sources — remote_download","text":"","code":"if (FALSE) {   downloaded_data <- remote_download(hashed_data = \"example_hash\",                                      ckan_url = \"https://example.com\",                                      ckan_key = \"your_ckan_key\",                                      ckan_package = \"your_ckan_package\",                                      s3_key_id = \"your_s3_key_id\",                                      s3_secret_key = \"your_s3_secret_key\",                                      s3_region = \"your_s3_region\",                                      s3_bucket = \"your_s3_bucket\",                                      mongo_key = \"mongo_key\",                                      mongo_collection = \"mongo_collection\") }"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/remote_raw_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Raw Data from Remote Sources — remote_raw_download","title":"Download Raw Data from Remote Sources — remote_raw_download","text":"function downloads data remote sources like CKAN AWS S3. retrieves data based hashed_data identifier assumes data stored using naming conventions provided `remote_share` function.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/remote_raw_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Raw Data from Remote Sources — remote_raw_download","text":"","code":"remote_raw_download(   hashed_data = NULL,   file_path = NULL,   ckan_url = NULL,   ckan_key = NULL,   ckan_package = NULL,   s3_key_id = NULL,   s3_secret_key = NULL,   s3_region = NULL,   s3_bucket = NULL )"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/remote_raw_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Raw Data from Remote Sources — remote_raw_download","text":"hashed_data character string representing hashed identifier data downloaded. file_path location name zip file create. ckan_url character string representing CKAN base URL. ckan_key character string representing CKAN API key. ckan_package character string representing CKAN package identifier. s3_key_id character string representing AWS S3 access key ID. s3_secret_key character string representing AWS S3 secret access key. s3_region character string representing AWS S3 region. s3_bucket character string representing AWS S3 bucket name.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/remote_raw_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Raw Data from Remote Sources — remote_raw_download","text":"return objects downloads.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/remote_raw_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Raw Data from Remote Sources — remote_raw_download","text":"","code":"if (FALSE) {   downloaded_data <- remote_raw_download(hashed_data = \"example_hash\",                                      file_path = \"your/path/file.zip\",                                      ckan_url = \"https://example.com\",                                      ckan_key = \"your_ckan_key\",                                      ckan_package = \"your_ckan_package\",                                      s3_key_id = \"your_s3_key_id\",                                      s3_secret_key = \"your_s3_secret_key\",                                      s3_region = \"your_s3_region\",                                      s3_bucket = \"your_s3_bucket\") }"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/remote_share.html","id":null,"dir":"Reference","previous_headings":"","what":"Remote Share Function — remote_share","title":"Remote Share Function — remote_share","text":"function uploads validated data specified remote repositories, CKAN, Amazon S3, /MongoDB","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/remote_share.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remote Share Function — remote_share","text":"","code":"remote_share(   validation,   data_formatted,   files,   verified,   valid_rules,   valid_key,   ckan_url,   ckan_key,   ckan_package,   url_to_send,   rules,   results,   s3_key_id,   s3_secret_key,   s3_region,   s3_bucket,   mongo_key,   mongo_collection,   old_cert = NULL )"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/remote_share.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remote Share Function — remote_share","text":"validation list containing validation information. data_formatted list containing formatted data. files vector file paths upload. verified secret key provided portal maintainer. valid_rules list valid rules dataset. valid_key list valid keys. ckan_url URL CKAN instance. ckan_key API key CKAN instance. ckan_package CKAN package data uploaded. url_to_send URL send data. rules set rules used validation. results list containing results validation. s3_key_id AWS ACCESS KEY ID s3_secret_key AWS SECRET ACCESS KEY s3_region AWS DEFAULT REGION s3_bucket name Amazon S3 bucket. mongo_key mongo connection url mongo_collection collection name old_cert (Optional) old certificate uploaded alongside new one override previous submission .","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/remote_share.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remote Share Function — remote_share","text":"list containing status message operation.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/remote_share.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remote Share Function — remote_share","text":"","code":"if (FALSE) { shared_data <- remote_share(validation = result_valid,                             data_formatted = result_valid$data_formatted,                             files = test_file,                             verified = \"your_verified_key\",                             valid_key = \"your_valid_key\",                             valid_rules = digest::digest(test_rules),                             ckan_url = \"https://example.com\",                             ckan_key = \"your_ckan_key\",                             ckan_package = \"your_ckan_package\",                             url_to_send = \"https://your-url-to-send.com\",                             rules = test_rules,                             results = valid_example$results,                             s3_key_id = \"your_s3_key_id\",                             s3_secret_key = \"your_s3_secret_key\",                             s3_region = \"your_s3_region\",                             s3_bucket = \"your_s3_bucket\",                             mongo_key = \"your_mongo_key\",                             mongo_collection = \"your_mongo_collection\",                             old_cert = NULL ) }"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/rows_for_rules.html","id":null,"dir":"Reference","previous_headings":"","what":"rows_for_rules — rows_for_rules","title":"rows_for_rules — rows_for_rules","text":"Get rows data violate specified rules.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/rows_for_rules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rows_for_rules — rows_for_rules","text":"","code":"rows_for_rules(data_formatted, report, broken_rules, rows)"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/rows_for_rules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rows_for_rules — rows_for_rules","text":"data_formatted formatted data frame. report validation report generated 'validate' function. broken_rules data frame broken rules information. rows vector row indices specifying rules suite rules errors check violations.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/rows_for_rules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rows_for_rules — rows_for_rules","text":"data frame rows data violate specified rules.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/rows_for_rules.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"rows_for_rules — rows_for_rules","text":"","code":"data(\"invalid_example\") #> Warning: data set ‘invalid_example’ not found data(\"test_rules\") #> Warning: data set ‘test_rules’ not found # Generate a validation report result_invalid <- validate_data(files_data = invalid_example,                         data_names = c(\"methodology\", \"particles\", \"samples\"),                         file_rules = test_rules) #> Error in eval(expr, envir, enclos): object 'invalid_example' not found  # Find the broken rules broken_rules <- rules_broken(results = result_invalid$results[[1]], show_decision = TRUE) #> Error in eval(expr, envir, enclos): object 'result_invalid' not found  # Get rows for the specified rules violating_rows <- rows_for_rules(data_formatted = result_invalid$data_formatted[[1]],                                  report = result_invalid$report[[1]],                                  broken_rules = broken_rules,                                  rows = 1) #> Error in eval(expr, envir, enclos): object 'broken_rules' not found"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/rules_broken.html","id":null,"dir":"Reference","previous_headings":"","what":"Broken rules — rules_broken","title":"Broken rules — rules_broken","text":"Filter results validation show broken rules, optionally including successful decisions.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/rules_broken.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Broken rules — rules_broken","text":"","code":"rules_broken(results, show_decision)"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/rules_broken.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Broken rules — rules_broken","text":"results data frame validation results. show_decision logical value indicate successful decisions included output.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/rules_broken.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Broken rules — rules_broken","text":"data frame filtered results.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/rules_broken.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Broken rules — rules_broken","text":"","code":"# Sample validation results data frame sample_results <- data.frame(   description = c(\"Rule 1\", \"Rule 2\", \"Rule 3\"),   status = c(\"error\", \"success\", \"error\"),   name = c(\"rule1\", \"rule2\", \"rule3\"),   expression = c(\"col1 > 0\", \"col2 <= 5\", \"col3 != 10\"),   stringsAsFactors = FALSE )  # Show only broken rules broken_rules <- rules_broken(sample_results, show_decision = FALSE)"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/run_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the apps — run_app","title":"Run the apps — run_app","text":"wrapper function starts user interface app choice.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/run_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the apps — run_app","text":"","code":"run_app(   path = \"system\",   log = TRUE,   ref = \"main\",   test_mode = FALSE,   app = \"validator\",   ... )"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/run_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the apps — run_app","text":"path store downloaded app files; defaults \"system\" pointing system.file(package = \"One4All\"). log logical; enables/disables logging tempdir() ref git reference; commit, tag, branch name. Defaults \"main\". change case errors. test_mode logical; internal testing . app app choice ... arguments passed runApp().","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/run_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the apps — run_app","text":"function normally return value, see runGitHub().","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/run_app.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run the apps — run_app","text":"running function Validator, Microplastic Image Explorer, Data Visualization GUI open separate window computer browser.","code":""},{"path":[]},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/run_app.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Run the apps — run_app","text":"Hannah Sherrod, Nick Leong, Hannah Hapich, Fabian Gomez, Win Cowger","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/run_app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run the apps — run_app","text":"","code":"if (FALSE) { run_app(app = \"validator\") }"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/test_profanity.html","id":null,"dir":"Reference","previous_headings":"","what":"Test for profanity in a string — test_profanity","title":"Test for profanity in a string — test_profanity","text":"function checks input string contains profane words.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/test_profanity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test for profanity in a string — test_profanity","text":"","code":"test_profanity(x)"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/test_profanity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test for profanity in a string — test_profanity","text":"x character string check profanity.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/test_profanity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test for profanity in a string — test_profanity","text":"logical value indicating whether input string contains profane words.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/test_profanity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test for profanity in a string — test_profanity","text":"","code":"test_profanity(\"This is a clean sentence.\") #> [1] TRUE test_profanity(\"This sentence contains a badword.\") #> [1] TRUE"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/test_rules.html","id":null,"dir":"Reference","previous_headings":"","what":"Rules data — test_rules","title":"Rules data — test_rules","text":"dataset containing rules descriptions, datasets, valid examples, severity, rules.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/test_rules.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Rules data — test_rules","text":"data frame 6 columns: name Name rule (e.g., \"MethodologyID_valid\") description Description rule (e.g., \"URL address valid can found internet.\") dataset Dataset associated rule (e.g., \"methodology\") valid_example valid example rule (e.g., \"https://www.waterboards.ca.gov/drinking_water/certlic/drinkingwater/documents/microplastics/mcrplsts_plcy_drft.pdf\") severity Severity rule (e.g., \"error\") rule actual rule (e.g., \"check_uploadable(MethodologyID) == TRUE\")","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/test_rules.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rules data — test_rules","text":"","code":"data(\"test_rules\") #> Warning: data set ‘test_rules’ not found"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/valid_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Valid Example Data — valid_example","title":"Valid Example Data — valid_example","text":"list containing three data frames example valid_example.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/valid_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Valid Example Data — valid_example","text":"list 3 data frames: data_frame_1 data frame 15 variables: MethodID, MatIDMethod, Equipment, Magnification, MethodComments, Protocols, Deployment, SamplingDevice, SmallestParticle, TopParticle, FilterType, FilterDiameter, FilterPoreSize, ImageFile, ImageType data_frame_2 data frame 131 variables: SampleID, SampleSize, Project, Affiliation, Citation, OwnerContributor, AnalysisContributor, ReportingContributor, SiteName, Location, Compartment, SampleComments, SamplingDepth, SamplingVolume, SamplingWeight, BlankContamination, Latitude, Longitude, Matrix, CollectionStartDateTime, CollectionEndDateTime, SpatialFile, Concentration, ConcentrationUnits, StandardizedConcentration, StandardizedConcentrationUnits, Color_Transparent, Color_Blue, Color_Red, Color_Brown, Color_Green, Color_Orange, Color_White, Color_Yellow, Color_Pink, Color_Black, Color_Other, Material_PEST, Material_PE, Material_PP, Material_PA, Material_PE_PS, Material_PS, Material_CA, Material_PVC, Material_ER, Material_PAM, Material_PET, Material_PlasticAdditive, Material_PBT, Material_PU, Material_PET_PEST, Material_PAN, Material_Silicone, Material_Acrylic, Material_Vinyl, Material_Vinyon, Material_Other, Material_PA_ER, Material_PTT, Material_PE_PP, Material_PPS, Material_Rayon, Material_PAA, Material_PMPS, Material_PI, Material_Olefin, Material_Styrene_Butadiene, Material_PBA, Material_PMMA, Material_Cellophane, Material_SAN, Material_PC, Material_PDMS, Material_PLA, Material_PTFE, Material_SBR, Material_PET_Olefin, Material_PES, Material_ABS, Material_LDPE, Material_PEVA, Material_AR, Material_PVA, Material_PPE, Morphology_Fragment, Morphology_Fiber, Morphology_Nurdle, Morphology_Film, Morphology_Foam, Morphology_Sphere, Morphology_Line, Morphology_Bead, Morphology_Sheet, Morphology_Film_Fragment, Morphology_Rubbery_Fragment, Size_3000um, Size_2_5mm, Size_1_5mm, Size_1_2mm, Size_0.5_1mm, Size_less_than_0.5mm, Size_500um, Size_300_500um, Size_125_300um, Size_100_500um, Size_greater_than_100um, Size_50_150um, Size_50_100um, Size_50um, Size_45_125um, Size_greater_than_25um, Size_20um_5mm, Size_20_100um, Size_20_50um, Size_10_50um, Size_10_45um, Size_10_20um, Size_greater_than_10um, Size_8_316um, Size_5_100um, Size_5_10um, Size_4_10um, Size_1.5_5um, Size_less_than_1.5um, Size_1_100um, Size_1_50um, Size_1_10um, Size_1_5um, Size_110_124nm, Size_0_20um data_frame_3 data frame 19 variables: ParticleID, Amount, Color, Polymer, Shape, PhotoID, ParticleComments, PlasticType, Length, Width, Height, Units, Mass, SurfaceArea, SizeDimension, Volume, Tactile, ArrivalDate, AnalysisDate","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/valid_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Valid Example Data — valid_example","text":"","code":"data(\"valid_example\") #> Warning: data set ‘valid_example’ not found"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/validate_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate_data: Validate data based on specified rules. — validate_data","title":"Validate_data: Validate data based on specified rules. — validate_data","text":"Validate_data: Validate data based specified rules.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/validate_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate_data: Validate data based on specified rules. — validate_data","text":"","code":"validate_data(   files_data,   data_names = NULL,   file_rules = NULL,   zip_data = NULL )"},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/validate_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate_data: Validate data based on specified rules. — validate_data","text":"files_data list file paths datasets validated. data_names (Optional) character vector names datasets. provided, names extracted file paths. file_rules file path rules file, either .csv .xlsx format. zip_data file path zip folder validating unstructured data.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/validate_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate_data: Validate data based on specified rules. — validate_data","text":"list containing following elements:   - data_formatted: list data frames validated data.   - data_names: character vector dataset names.   - report: list validation report objects dataset.   - results: list validation result data frames dataset.   - rules: list validator objects dataset.   - status: character string indicating overall validation status (\"success\" \"error\").   - issues: logical vector indicating issues validation results.   - message: data.table containing information issues encountered.","code":""},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/reference/validate_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate_data: Validate data based on specified rules. — validate_data","text":"","code":"# Validate data with specified rules data(\"valid_example\") #> Warning: data set ‘valid_example’ not found data(\"invalid_example\") #> Warning: data set ‘invalid_example’ not found data(\"test_rules\") #> Warning: data set ‘test_rules’ not found  result_valid <- validate_data(files_data = valid_example,                         data_names = c(\"methodology\", \"particles\", \"samples\"),                         file_rules = test_rules) #> Error in eval(expr, envir, enclos): object 'valid_example' not found                         result_invalid <- validate_data(files_data = invalid_example,                         data_names = c(\"methodology\", \"particles\", \"samples\"),                         file_rules = test_rules) #> Error in eval(expr, envir, enclos): object 'invalid_example' not found"},{"path":[]},{"path":"https://moore-institute-4-plastic-pollution-res.github.io/One4All/news/index.html","id":"innitial-release-0-1","dir":"Changelog","previous_headings":"","what":"Innitial Release!","title":"One4All 0.1","text":"Just getting started, lots work left .","code":""}]
